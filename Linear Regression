# Import necessary libraries
import numpy as np  # Import NumPy library for numerical operations
import matplotlib.pyplot as plt  # Import Matplotlib library for plotting
from sklearn.linear_model import LinearRegression  # Import LinearRegression class from scikit-learn

# Generate some random data for demonstration
np.random.seed(42)  # Set random seed for reproducibility
X = 2 * np.random.rand(100, 1)  # Generate random input data (X) with 100 samples and 1 feature
y = 4 + 3 * X + np.random.randn(100, 1)  # Generate random target data (y) based on X and add random noise

# Create a linear regression model
model = LinearRegression()  # Initialize a LinearRegression object

# Train the model
model.fit(X, y)  # Train the model using the provided input (X) and target data (y)

# Make predictions
X_new = np.array([[0], [2]])  # Create new input data (X_new) for prediction
y_pred = model.predict(X_new)  # Predict the target values (y_pred) for the new input data (X_new)

# Plot the data and the regression line
plt.scatter(X, y, alpha=0.6, label='Data')  # Plot the original data points
plt.plot(X_new, y_pred, 'r-', label='Regression Line')  # Plot the predicted values for the new input data
plt.xlabel('X')  # Label the x-axis as 'X'
plt.ylabel('y')  # Label the y-axis as 'y'
plt.legend()  # Display the legend for the plot
plt.show()  # Display the plot
